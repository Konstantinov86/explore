# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 250,
			:port => 1
		},
		:sata2 => {
                        :dfile => './sata2.vdi',
                        :size => 250, # Megabytes
			:port => 2
#		
#                :sata3 => {
#                        :dfile => './sata3.vdi',
#                        :size => 250,
#                        :port => 3
#                },
#                :sata4 => {
#                        :dfile => './sata4.vdi',
#                        :size => 250, # Megabytes
#                        :port => 4
                }
	}

		
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "1024"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
	      sudo yum install -y mdadm smartmontools hdparm gdisk wget createrepo
		  sudo yum groupinstall -y "Development Tools" && yum install rpmdevtools nano yum-utils
		  sudo yum-builddep -y rpm-build
		  rpmdev-setuptree
		  #create nginx repo
		  cd /tmp
          touch nginx.repo
		  cat <<EOF > nginx.repo
[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/mainline/centos/7/$basearch/
gpgcheck=0
enabled=1

[nginx-source]
name=nginx source repo
baseurl=http://nginx.org/packages/mainline/centos/7/SRPMS/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
EOF
sudo cp /tmp/nginx.repo /etc/yum.repos.d/
#download source
cd /tmp
sudo yumdownloader --source nginx
sudo rpm -Uvh nginx*.src.rpm
sudo yum-builddep nginx
sudo rpm -Uvh nginx*.ngx.src.rpm
cd /usr/src/
sudo wget https://www.openssl.org/source/openssl-1.0.2p.tar.gz
sudo tar -xvzf openssl-1.0.2p.tar.gz
#add module openssl
sed -i 's:.*--with-debug.*:--with-openssl=/usr/src/openssl-1.1.1-pre9 \\\n&:' /root/rpmbuild/SPECS/nginx.spec
#build rpm with modules
sudo rpmbuild -ba nginx.spec
#create repo
sudo mkdir -p /repos/CentOS/7/
sudo createrepo /repos/CentOS/7/x86_64/
sudo cp -R /root/rpmbuild/RPMS/x86_64 /repos/CentOS/7/
cd /tmp
touch my_nginx.repo
cat <<EOF > my_nginx.repo
[my_nginx]
name=my_nginx
baseurl=file:///repos/CentOS/7/x86_64/$basearch/
gpgcheck=0
enabled=0
EOF
sudo cp /tmp/my_nginx.repo /etc/yum.repos.d/
#install
sudo yum --enablerepo=my_nginx install nginx
#enable
sudo systemctl enable nginx
sudo systemctl start nginx
  	  SHELL

      end
  end
end

