# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
MACHINES = {
  :centos2 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 250,
			:port => 1
		},
		:sata2 => {
                        :dfile => './sata2.vdi',
                        :size => 250, # Megabytes
			:port => 2
		}
   #             :sata3 => {
    #                    :dfile => './sata3.vdi',
     #                   :size => 250,
      #                  :port => 3
       #         },
        #        :sata4 => {
         #               :dfile => './sata4.vdi',
          #              :size => 250, # Megabytes
           #             :port => 4
            #    },
			#	:sata5 => {
             #           :dfile => './sata5.vdi',
              #          :size => 250, # Megabytes
               #         :port => 5
               # },
				#:sata6 => {
                 #       :dfile => './sata6.vdi',
                  #      :size => 250, # Megabytes
                   #     :port => 6
              #  }

	#}

		
  },
}
}
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.

# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "1024"]
		  vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]

		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
			  end
			  vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]

		  end
          end
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
#	      yum install -y mdadm smartmontools hdparm gdisk
#		 sudo mdadm --create --verbose /dev/md0 --level=6 --raid-devices=6 /dev/sdb /dev/sdc /dev/sdd /dev/sde /dev/sdf /dev/sdg
#		 sudo sgdisk --new 1::+100M --new 2::+100M --new 3::+200M --new 4::+300M --new 5:: /dev/md0
#		 sudo mkdir /u01 /u02 /u03 /u04 /u05
#		 sudo mkfs.ext4 /dev/md0p1
#		 sudo mkfs.ext4 /dev/md0p2
#		 sudo mkfs.ext4 /dev/md0p3
#		 sudo mkfs.ext4 /dev/md0p4
#		 sudo mkfs.ext4 /dev/md0p5
#		 mount /dev/md0p1 /u01
#		 mount /dev/md0p2 /u02
#		 mount /dev/md0p3 /u03
#		 mount /dev/md0p4 /u04
#		 mount /dev/md0p5 /u05
vgrename -v VolGroup00 VolGroup00RENAME
sed -i 's/VolGroup00/VolGroup00RENAME/g' /boot/grub2/grub.cfg
sed -i 's/VolGroup00/VolGroup00RENAME/g' /etc/fstab
mkdir -p /usr/lib/dracut/modules.d/01test/
cp /vagrant/module-setup.sh /usr/lib/dracut/modules.d/01test/module-setup.sh
cp /vagrant/test.sh /usr/lib/dracut/modules.d/01test/test.sh
mkinitrd -f -v /boot/initramfs-$(uname -r).img $(uname -r)
  	  SHELL

      end
  end
end
